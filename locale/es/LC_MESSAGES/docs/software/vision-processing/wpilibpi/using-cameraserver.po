# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, FIRST and other WPILib Contributors. This work is licensed under a Creative Commons Attribution 4.0 International License
# This file is distributed under the same license as the FIRST Robotics Competition package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Austin Shalit <austinshalit@gmail.com>, 2020
# Diana Ramos <dianaracasas@gmail.com>, 2020
# Miguel Angel de León Adame <miguelangeldla14@gmail.com>, 2022
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: FIRST Robotics Competition 2022\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-12-30 04:03+0000\n"
"PO-Revision-Date: 2020-12-18 04:25+0000\n"
"Last-Translator: Miguel Angel de León Adame <miguelangeldla14@gmail.com>, 2022\n"
"Language-Team: Spanish (Mexico) (https://www.transifex.com/wpilib/teams/109324/es_MX/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es_MX\n"
"Plural-Forms: nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? 1 : 2;\n"

#: ../../frc-docs/source/docs/software/vision-processing/wpilibpi/using-cameraserver.rst:2
msgid "Using CameraServer"
msgstr "Usando la CameraServer"

#: ../../frc-docs/source/docs/software/vision-processing/wpilibpi/using-cameraserver.rst:5
msgid "Grabbing Frames from CameraServer"
msgstr "Capturando marcos de CameraServer"

#: ../../frc-docs/source/docs/software/vision-processing/wpilibpi/using-cameraserver.rst:7
msgid ""
"The WPILibPi image comes with all the necessary libraries to make your own "
"vision processing system. In order to get the current frame from the camera,"
" you can use the CameraServer library. For information about CameraServer, "
"the :ref:`docs/software/vision-processing/introduction/cameraserver-"
"class:Read and Process Video: CameraServer Class`."
msgstr ""
"La imagen WPILibPi viene con todas las bibliotecas necesarias para crear su "
"propio sistema de procesamiento de visión. Para obtener el fotograma actual "
"de la cámara, puede utilizar la biblioteca CameraServer. Para obtener "
"información sobre CameraServer, consulte :ref:`docs/software/vision-"
"processing/introduction/cameraserver-class:Read and Process Video: "
"CameraServer Class`."

#: ../../frc-docs/source/docs/software/vision-processing/wpilibpi/using-cameraserver.rst:30
msgid ""
"OpenCV reads in the image as **BGR**, not **RGB** for historical reasons. "
"Use ``cv2.cvtColor`` if you want to change it to RGB."
msgstr ""
" OpenCV lee en la imagen como **BGR**, no como **RGB** por razones "
"históricas. Usa ``cv2.cvtColor`` si desea cambiarlo a RGB."

#: ../../frc-docs/source/docs/software/vision-processing/wpilibpi/using-cameraserver.rst:32
msgid ""
"Below is an example of an image that might be grabbed from CameraServer."
msgstr ""
"A continuación se muestra un ejemplo de una imagen que podría capturarse "
"desde CameraServer."

#: ../../frc-docs/source/docs/software/vision-processing/wpilibpi/using-cameraserver.rst:38
msgid "Sending frames to CameraServer"
msgstr "Envío de marcos a CameraServer"

#: ../../frc-docs/source/docs/software/vision-processing/wpilibpi/using-cameraserver.rst:40
msgid ""
"Sometimes, you may want to send processed video frames back to the "
"CameraServer instance for debugging purposes, or viewing in a dashboard "
"application like Shuffleboard."
msgstr ""
"A veces, es posible que desee enviar fotogramas de video procesados ​​a la "
"instancia de CameraServer para fines de depuración o para ver en una "
"aplicación del dashboard como Shuffleboard."

#: ../../frc-docs/source/docs/software/vision-processing/wpilibpi/using-cameraserver.rst:65
msgid ""
"As an example, the processing code could outline the target in red, and show"
" the corners in yellow for debugging purposes."
msgstr ""
"Como ejemplo, el código de procesamiento podría delinear el objetivo en rojo"
" y mostrar las esquinas en amarillo para fines de depuración."

#: ../../frc-docs/source/docs/software/vision-processing/wpilibpi/using-cameraserver.rst:67
msgid ""
"Below is an example of a fully processed image that would be sent back to "
"CameraServer and displayed on the Driver Station computer."
msgstr ""
"A continuación se muestra un ejemplo de una imagen completamente procesada "
"que se enviaría de vuelta a CameraServer y se muestra en la computadora "
"Driver Station."
