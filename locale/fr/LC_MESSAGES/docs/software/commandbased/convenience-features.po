# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, FIRST and other WPILib Contributors
# This file is distributed under the same license as the FIRST Robotics Competition package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Andy Chang, 2020
# Austin Shalit <austinshalit@gmail.com>, 2021
# Andre Theberge <atheberge2@videotron.ca>, 2021
# Regis Bekale <rbekale@robotiquefirstquebec.org>, 2022
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: FIRST Robotics Competition 2022\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-01-08 04:04+0000\n"
"PO-Revision-Date: 2020-04-25 02:02+0000\n"
"Last-Translator: Regis Bekale <rbekale@robotiquefirstquebec.org>, 2022\n"
"Language-Team: French (Canada) (https://www.transifex.com/wpilib/teams/109324/fr_CA/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: fr_CA\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../frc-docs/source/docs/software/commandbased/convenience-features.rst:2
msgid "Convenience Features"
msgstr "Fonctions pratiques"

#: ../../frc-docs/source/docs/software/commandbased/convenience-features.rst:4
msgid ""
"While the previously-described methodologies will work fine for writing "
"command-based robot code, the command-based libraries contain several "
"convenience features for more-advanced users that can greatly reduce the "
"verbosity/complexity of command-based code. It is highly recommended that "
"users familiarize themselves with these features to maximize the value they "
"get out of the command-based libraries."
msgstr ""
"Alors que les méthodologies décrites précédemment fonctionneront bien pour "
"écrire du code de robot basé sur des commandes, les librairies basées sur "
"des commandes contiennent plusieurs fonctionnalités pratiques pour les "
"utilisateurs plus avancés qui peuvent réduire considérablement la "
"verbosité/complexité du code basé sur les commandes. Il est fortement "
"recommandé aux utilisateurs de se familiariser avec ces fonctionnalités pour"
" maximiser la valeur qu'ils retirent des librairies orientées commandes."

#: ../../frc-docs/source/docs/software/commandbased/convenience-features.rst:7
msgid "Inline Command Definitions"
msgstr "Définitions des commandes en ligne"

#: ../../frc-docs/source/docs/software/commandbased/convenience-features.rst:9
msgid ""
"While users are able to create commands by explicitly writing command "
"classes (either by subclassing ``CommandBase`` or implementing ``Command``),"
" for many commands (such as those that simply call a single subsystem "
"method) this involves a lot of wasteful boilerplate code. To help alleviate "
"this, many of the prewritten commands included in the command-based library "
"may be *inlined* - that is, the command body can be defined in a single line"
" of code at command construction."
msgstr ""
"Alors que les utilisateurs peuvent créer des commandes en écrivant "
"explicitement des classes de commandes (soit en sous-classant "
"``CommandBase`` ou en implémentant ``Command``), pour de nombreuses "
"commandes (telles que celles qui appellent simplement une seule méthode de "
"sous-système), cela implique beaucoup de code inutile. Pour aider à atténuer"
" cela, la plupart des commandes pré-écrites incluses dans la librairie basée"
" sur les commandes peuvent être *inline* - c'est-à-dire que le corps de la "
"commande peut être défini dans une seule ligne de code lors de la "
"construction de la commande."

#: ../../frc-docs/source/docs/software/commandbased/convenience-features.rst:12
msgid "Passing Subroutines As Parameters"
msgstr "Passer des sous-programmes en tant que paramètres"

#: ../../frc-docs/source/docs/software/commandbased/convenience-features.rst:14
msgid ""
"In order to inline a command definition, users require some way to specify "
"what code the commands will run as constructor parameters. Fortunately, both"
" Java and C++ offer users the ability to pass subroutines as parameters."
msgstr ""
"Afin d'insérer une définition de commande, les utilisateurs ont besoin d'un "
"moyen de spécifier le code que les commandes exécuteront en tant que "
"paramètres de constructeur. Heureusement, Java et C ++ offrent aux "
"utilisateurs la possibilité de transmettre des sous-programmes en tant que "
"paramètres."

#: ../../frc-docs/source/docs/software/commandbased/convenience-features.rst:17
msgid "Method References (Java)"
msgstr "Références de méthode (Java)"

#: ../../frc-docs/source/docs/software/commandbased/convenience-features.rst:19
msgid ""
"In Java, a reference to a subroutine that can be passed as a parameter is "
"called a method reference. The general syntax for a method reference is "
"``object::method``. Note that no method parameters are included, since the "
"method *itself* is the parameter. The method is not being called - it is "
"being passed to another piece of code (in this case, a command) so that "
"*that* code can call it when needed. For further information on method "
"references, see `the official Oracle documentation "
"<https://docs.oracle.com/javase/tutorial/java/javaOO/methodreferences.html>`__."
msgstr ""
"En Java, une référence à un sous-programme qui peut être passé en tant que "
"paramètre est appelée une référence de méthode. La syntaxe générale d'une "
"référence de méthode est ``object::method``. Notez qu'aucun paramètre de "
"méthode n'est inclus, puisque la méthode *elle-même* est le paramètre. La "
"méthode n'est pas appelée - elle est transmise à un autre bout de code (dans"
" ce cas, une commande) afin que *ce* code puisse l'appeler en cas de besoin."
" Pour plus d'informations sur les références de méthodes, voir `la "
"documentation officielle d'Oracle "
"<https://docs.oracle.com/javase/tutorial/java/javaOO/methodreferences.html>`__."

#: ../../frc-docs/source/docs/software/commandbased/convenience-features.rst:22
msgid "Lambda Expressions (Java)"
msgstr "Expressions Lambda (Java)"

#: ../../frc-docs/source/docs/software/commandbased/convenience-features.rst:24
msgid ""
"While method references work well for passing a subroutine that has already "
"been written, often it is inconvenient/wasteful to write a subroutine solely"
" for the purpose of sending as a method reference, if that subroutine will "
"never be used elsewhere. To avoid this, Java also supports a feature called "
"\"lambda expressions.\" A lambda expression is an inline method definition -"
" it allows a subroutine to be defined *inside of a parameter list*. For "
"specifics on how to write Java lambda expressions, see `this tutorial "
"<https://docs.oracle.com/javase/tutorial/java/javaOO/lambdaexpressions.html#syntax>`__."
msgstr ""
"Alors que les références de méthode fonctionnent bien pour passer un sous-"
"programme qui a déjà été écrit, il est souvent peu pratique/inutile d'écrire"
" un sous-programme uniquement dans le but de l'envoyer comme référence de "
"méthode, si ce sous-programme ne sera jamais utilisé ailleurs. Pour éviter "
"cela, Java prend également en charge une fonctionnalité appelée "
"\"expressions lambda\". Une expression lambda est une définition de méthode "
"\"inline\" - elle permet à un sous-programme d'être défini *à l'intérieur "
"d'une liste de paramètres*. Pour plus de détails sur l'écriture "
"d'expressions lambda Java, consultez `ce tutoriel "
"<https://docs.oracle.com/javase/tutorial/java/javaOO/lambdaexpressions.html#syntax>`__."

#: ../../frc-docs/source/docs/software/commandbased/convenience-features.rst:27
msgid "Lambda Expressions (C++)"
msgstr "Expressions Lambda (C ++)"

#: ../../frc-docs/source/docs/software/commandbased/convenience-features.rst:29
msgid ""
"Due to complications in C++ semantics, capturing ``this`` in a C++ lambda "
"can cause a null pointer exception if done from a component command of a "
"command group.  Whenever possible, C++ users should capture relevant command"
" members explicitly and by value.  For more details, see `here "
"<https://github.com/wpilibsuite/allwpilib/issues/3109>`__."
msgstr ""
"En raison de complications dans la sémantique C ++, la capture de `` this ''"
" dans un lambda C ++ peut provoquer une exception de pointeur nul si elle "
"est effectuée à partir d'une commande de composant d'un groupe de commandes."
" Dans la mesure du possible, les utilisateurs C ++ doivent capturer les "
"membres de commande pertinents de manière explicite et par valeur. Pour plus"
" de détails, voir `ici "
"<https://github.com/wpilibsuite/allwpilib/issues/3109>`__."

#: ../../frc-docs/source/docs/software/commandbased/convenience-features.rst:31
msgid ""
"C++ lacks a close equivalent to Java method references - pointers to member "
"functions are generally not directly useable as parameters due to the "
"presence of the implicit ``this`` parameter.  However, C++ does offer lambda"
" expressions - in addition, the lambda expressions offered by C++ are in "
"many ways more powerful than those in Java.  For specifics on how to write "
"C++ lambda expressions, see `cppreference "
"<https://en.cppreference.com/w/cpp/language/lambda>`__."
msgstr ""
"C++ n'a pas d'équivalent proche des références de méthode Java - les "
"pointeurs vers les fonctions membres ne sont généralement pas directement "
"utilisables en tant que paramètres en raison de la présence du paramètre "
"implicite ``this``. Cependant, C++ propose des expressions lambda - en "
"outre, les expressions lambda proposées par C++ sont à bien des égards plus "
"puissantes que celles de Java. Pour plus d'informations sur l'écriture "
"d'expressions lambda C++, consultez `cppreference "
"<https://en.cppreference.com/w/cpp/language/lambda>`__."

#: ../../frc-docs/source/docs/software/commandbased/convenience-features.rst:34
msgid "Inlined Command Example"
msgstr "Exemple de commande \"inline\""

#: ../../frc-docs/source/docs/software/commandbased/convenience-features.rst:36
msgid "So, what does an inlined command definition look like in practice?"
msgstr ""
"Alors, à quoi ressemble une définition de commande \"inline\" dans la "
"pratique?"

#: ../../frc-docs/source/docs/software/commandbased/convenience-features.rst:38
msgid ""
"The ``InstantCommand`` class provides an example of a type of command that "
"benefits greatly from inlining. Consider the following from the "
"HatchBotInlined example project (`Java "
"<https://github.com/wpilibsuite/allwpilib/tree/main/wpilibjExamples/src/main/java/edu/wpi/first/wpilibj/examples/hatchbotinlined>`__,"
" `C++ "
"<https://github.com/wpilibsuite/allwpilib/tree/main/wpilibcExamples/src/main/cpp/examples/HatchbotInlined>`__):"
msgstr ""
" La classe ``InstantCommand`` fournit un exemple d’un type de commande qui "
"bénéficie grandement de l’inlining. Considérez ce qui suit du projet "
"HatchBotInlined example (`Java "
"<https://github.com/wpilibsuite/allwpilib/tree/main/wpilibjExamples/src/main/java/edu/wpi/first/wpilibj/examples/hatchbotinlined>`__,"
" `C++ "
"<https://github.com/wpilibsuite/allwpilib/tree/main/wpilibcExamples/src/main/cpp/examples/HatchbotInlined>`__):"

#: ../../frc-docs/source/docs/software/commandbased/convenience-features.rst:42
#: ../../frc-docs/source/docs/software/commandbased/convenience-features.rst:101
msgid "Java"
msgstr "Java"

#: ../../frc-docs/source/docs/software/commandbased/convenience-features.rst:50
#: ../../frc-docs/source/docs/software/commandbased/convenience-features.rst:109
msgid "C++ (Header)"
msgstr "C++ (Header ou en-tête)"

#: ../../frc-docs/source/docs/software/commandbased/convenience-features.rst:58
msgid "C++ (Source)"
msgstr "C++ (Source)"

#: ../../frc-docs/source/docs/software/commandbased/convenience-features.rst:66
msgid ""
"Instead of wastefully writing separate ``GrabHatch`` and ``ReleaseHatch`` "
"commands which call only one method before ending, both can be accomplished "
"with a simple inline definition by passing appropriate subsystem method."
msgstr ""
"Au lieu d'écrire inutilement des commandes séparées ``GrabHatch`` et "
"``ReleaseHatch`` qui n'appellent qu'une seule méthode avant de se terminer, "
"les deux peuvent être accomplies avec une simple définition \"inline\" en "
"passant la méthode du sous-système appropriée."

#: ../../frc-docs/source/docs/software/commandbased/convenience-features.rst:69
msgid "Included Command Types"
msgstr "Types de commandes incluses "

#: ../../frc-docs/source/docs/software/commandbased/convenience-features.rst:74
msgid "ConditionalCommand"
msgstr "ConditionalCommand"

#: ../../frc-docs/source/docs/software/commandbased/convenience-features.rst:91
msgid "SelectCommand"
msgstr "SelectCommand"

#: ../../frc-docs/source/docs/software/commandbased/convenience-features.rst:93
msgid ""
"While the Java version of SelectCommand simply uses an ``Object`` as a key, "
"the C++ version is templated on the key type."
msgstr ""
"Alors que la version Java de SelectCommand utilise simplement un ``Object`` "
"comme clé, la version C++ est basée sur le type de clé."

#: ../../frc-docs/source/docs/software/commandbased/convenience-features.rst:95
msgid ""
"An alternate version of SelectCommand simply takes a method that supplies "
"the command to be run - this can be very succinct, but makes inferring the "
"command's requirements impossible, and so leaves the user responsible for "
"manually adding the requirements to the SelectCommand."
msgstr ""
"Une version alternative de SelectCommand prend simplement une méthode qui "
"fournit la commande à exécuter - cela peut être très succinct, mais rend "
"impossible à déduire les exigences de la commande, et laisse ainsi "
"l'utilisateur responsable de l'ajout manuel des exigences à SelectCommand."

#: ../../frc-docs/source/docs/software/commandbased/convenience-features.rst:118
msgid "InstantCommand"
msgstr "InstantCommand"

#: ../../frc-docs/source/docs/software/commandbased/convenience-features.rst:135
msgid "RunCommand"
msgstr "RunCommand"

#: ../../frc-docs/source/docs/software/commandbased/convenience-features.rst:163
msgid "StartEndCommand"
msgstr "StartEndCommand"

#: ../../frc-docs/source/docs/software/commandbased/convenience-features.rst:192
msgid "FunctionalCommand"
msgstr "FunctionalCommand"

#: ../../frc-docs/source/docs/software/commandbased/convenience-features.rst:229
msgid "PrintCommand"
msgstr "PrintCommand"

#: ../../frc-docs/source/docs/software/commandbased/convenience-features.rst:244
msgid "ScheduleCommand"
msgstr "ScheduleCommand"

#: ../../frc-docs/source/docs/software/commandbased/convenience-features.rst:260
msgid ""
"This is often useful for \"forking off\" from command groups: by default, "
"commands in command groups are run *through* the command group, and are "
"never themselves seen by the scheduler.  Accordingly, their requirements are"
" added to the group's requirements.  While this is usually fine, sometimes "
"it is undesirable for the entire command group to gain the requirements of a"
" single command - a good solution is to \"fork off\" from the command group "
"and schedule that command separately."
msgstr ""
"Ceci est souvent utile pour \"sortir\" du groupe de commandes: par défaut, "
"les commandes des groupes de commandes sont exécutées *via* le groupe de "
"commandes, et ne sont jamais elles-mêmes vues par le planificateur. En "
"conséquence, leurs exigences s'ajoutent aux exigences du groupe. Bien que ce"
" soit généralement bien, il n'est parfois pas souhaitable que tout le groupe"
" de commandes obtienne les exigences d'une seule commande - une bonne "
"solution est de «sortir» du groupe de commandes et de planifier cette "
"commande séparément."

#: ../../frc-docs/source/docs/software/commandbased/convenience-features.rst:263
msgid "ProxyScheduleCommand"
msgstr "ProxyScheduleCommand"

#: ../../frc-docs/source/docs/software/commandbased/convenience-features.rst:279
msgid ""
"This is often useful for \"forking off\" from command groups: by default, "
"commands in command groups are run *through* the command group, and are "
"never themselves seen by the scheduler.  Accordingly, their requirements are"
" added to the group's requirements.  While this is usually fine, sometimes "
"it is undesirable for the entire command group to gain the requirements of a"
" single command - a good solution is to \"fork off\" from the command group "
"and schedule the command separately."
msgstr ""
"Ceci est souvent utile pour \"sortir\" des groupes de commandes: par défaut,"
" les commandes des groupes de commandes sont exécutées *via* le groupe de "
"commandes, et ne sont jamais elles-mêmes vues par le planificateur. En "
"conséquence, leurs exigences s'ajoutent aux exigences du groupe. Bien que ce"
" soit généralement bien, il n'est parfois pas souhaitable que tout le groupe"
" de commandes obtienne les exigences d'une seule commande - une bonne "
"solution est de «sortir» du groupe de commandes et de planifier la commande "
"séparément."

#: ../../frc-docs/source/docs/software/commandbased/convenience-features.rst:282
msgid "WaitCommand"
msgstr "WaitCommand"

#: ../../frc-docs/source/docs/software/commandbased/convenience-features.rst:298
msgid "This is often useful as a component of a command group."
msgstr ""
"Ceci est souvent utile en tant que composant d'un groupe de commandes."

#: ../../frc-docs/source/docs/software/commandbased/convenience-features.rst:300
msgid ""
"``WaitCommand`` can also be subclassed to create a more complicated command "
"that runs for a period of time. If ``WaitCommand`` is used in this method, "
"the user must ensure that the ``WaitCommand``'s ``Initialize``, ``End``, and"
" ``IsFinished`` methods are still called in order for the WaitCommand's "
"timer to work."
msgstr ""
"``WaitCommand``  peut également être dérivée (sous-classée) pour créer une "
"commande plus compliquée qui s’exécute pendant un certain temps. Si "
"``WaitCommand`` est utilisée dans cette méthode, l’utilisateur doit "
"s’assurer que les méthodes ``WaitCommand`` ``Initialize``, ``End`` et "
"``IsFinished`` sont toujours appelées pour le timer de  WaitCommand "
"fonctionne."

#: ../../frc-docs/source/docs/software/commandbased/convenience-features.rst:303
msgid "WaitUntilCommand"
msgstr "WaitUntilCommand"

#: ../../frc-docs/source/docs/software/commandbased/convenience-features.rst:305
msgid ""
"The match timer used by WaitUntilCommand does *not* provide an official "
"match time!  While it is fairly accurate, use of this timer can *not* "
"guarantee the legality of your robot's actions."
msgstr ""
"La minuterie de match utilisé par WaitUntilCommand ne fournit *pas* un temps"
" de match officiel! Bien qu'elle soit assez précise, l'utilisation de cette "
"minuterie ne peut *pas* garantir la légalité des actions de votre robot."

#: ../../frc-docs/source/docs/software/commandbased/convenience-features.rst:328
msgid "PerpetualCommand"
msgstr "PerpetualCommand"

#: ../../frc-docs/source/docs/software/commandbased/convenience-features.rst:345
msgid "Command Decorator Methods"
msgstr "Méthodes \"Command Decorator\""

#: ../../frc-docs/source/docs/software/commandbased/convenience-features.rst:356
msgid "withTimeout"
msgstr "withTimeout"

#: ../../frc-docs/source/docs/software/commandbased/convenience-features.rst:374
msgid "withInterrupt"
msgstr "withInterrupt"

#: ../../frc-docs/source/docs/software/commandbased/convenience-features.rst:391
msgid "andThen"
msgstr "andThen"

#: ../../frc-docs/source/docs/software/commandbased/convenience-features.rst:408
msgid "beforeStarting"
msgstr "beforeStarting"

#: ../../frc-docs/source/docs/software/commandbased/convenience-features.rst:425
msgid "alongWith (Java only)"
msgstr "alongWith (Java seulement)"

#: ../../frc-docs/source/docs/software/commandbased/convenience-features.rst:427
msgid ""
"This decorator is not supported in C++ due to technical constraints - users "
"should simply construct a parallel command group the ordinary way instead."
msgstr ""
"Ce décorateur n'est pas pris en charge en C ++ en raison de contraintes "
"techniques - les utilisateurs doivent simplement construire un groupe de "
"commandes parallèle de la manière habituelle."

#: ../../frc-docs/source/docs/software/commandbased/convenience-features.rst:437
msgid "raceWith (Java only)"
msgstr "raceWith (Java seulement)"

#: ../../frc-docs/source/docs/software/commandbased/convenience-features.rst:439
msgid ""
"This decorator is not supported in C++ due to technical constraints - users "
"should simply construct a parallel race group the ordinary way instead."
msgstr ""
"Ce décorateur n'est pas pris en charge en C ++ en raison de contraintes "
"techniques - les utilisateurs doivent simplement construire un groupe de "
"type \"race\" (ou course) parallèle de la manière habituelle."

#: ../../frc-docs/source/docs/software/commandbased/convenience-features.rst:449
msgid "deadlineWith (Java only)"
msgstr "deadlineWith (Java seulement)"

#: ../../frc-docs/source/docs/software/commandbased/convenience-features.rst:451
msgid ""
"This decorator is not supported in C++ due to technical constraints - users "
"should simply construct a parallel deadline group the ordinary way instead."
msgstr ""
"Ce décorateur n'est pas pris en charge en C++ en raison de contraintes "
"techniques - les utilisateurs doivent simplement créer un groupe de type "
"\"deadline\" (échéance)  parallèle de la manière habituelle."

#: ../../frc-docs/source/docs/software/commandbased/convenience-features.rst:461
msgid "withName (Java only)"
msgstr "withName (Pour Java uniquement)"

#: ../../frc-docs/source/docs/software/commandbased/convenience-features.rst:463
msgid ""
"This decorator is not supported in C++ due to technical constraints - users "
"should set the name of the command inside their command class instead."
msgstr ""
"Ce décorateur n’est pas supporté en C++ en raison de contraintes techniques "
"- à la place, les utilisateurs devraient définir le nom de la commande à "
"l’intérieur de leur classe de commande."

#: ../../frc-docs/source/docs/software/commandbased/convenience-features.rst:473
msgid "perpetually"
msgstr "perpetually"

#: ../../frc-docs/source/docs/software/commandbased/convenience-features.rst:490
msgid "Composing Decorators"
msgstr "Décorateurs de composition"

#: ../../frc-docs/source/docs/software/commandbased/convenience-features.rst:492
msgid ""
"Remember that decorators, like all command groups, can be composed! This "
"allows very powerful and concise inline expressions:"
msgstr ""
"N'oubliez pas que les décorateurs, comme tous les groupes de commandes, "
"peuvent être composés! Cela permet des expressions en ligne très puissantes "
"et concises:"

#: ../../frc-docs/source/docs/software/commandbased/convenience-features.rst:500
msgid "Static Factory Methods for Command Groups (Java only)"
msgstr ""
"Méthodes \"Static Factory\" pour les groupes de commandes (Java seulement)"

#: ../../frc-docs/source/docs/software/commandbased/convenience-features.rst:502
msgid ""
"These factory methods are not included in the C++ command library, as the "
"reduction in verbosity would be minimal - C++ commands should be stack-"
"allocated, removing the need for the ``new`` keyword."
msgstr ""
"Ces méthodes de type \"Factory\" ne sont pas incluses dans la librairie de "
"commandes C++, car la réduction de la verbosité serait minimale - les "
"commandes C++ devraient être allouées dans la pile (stack), supprimant ainsi"
" le besoin du mot clé ``new``."
