# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, FIRST and other WPILib Contributors. This work is licensed under a Creative Commons Attribution 4.0 International License
# This file is distributed under the same license as the FIRST Robotics Competition package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Étienne Beaulac <etienne.beaulac@outlook.com>, 2020
# Austin Shalit <austinshalit@gmail.com>, 2021
# Regis Bekale <rbekale@robotiquefirstquebec.org>, 2021
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: FIRST Robotics Competition 2022\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-10-29 04:15+0000\n"
"PO-Revision-Date: 2020-04-25 02:02+0000\n"
"Last-Translator: Regis Bekale <rbekale@robotiquefirstquebec.org>, 2021\n"
"Language-Team: French (Canada) (https://www.transifex.com/wpilib/teams/109324/fr_CA/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: fr_CA\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % 1000000 == 0 ? 1 : 2;\n"

#: ../../frc-docs/source/docs/software/commandbased/subsystems.rst:2
msgid "Subsystems"
msgstr "Les sous-systèmes"

#: ../../frc-docs/source/docs/software/commandbased/subsystems.rst:6
msgid ""
"Subsystems also serve as the backbone of the ``CommandScheduler``\\ ’s "
"resource management system. Commands may declare resource requirements by "
"specifying which subsystems they interact with; the scheduler will never "
"concurrently schedule more than one command that requires a given subsystem."
" An attempt to schedule a command that requires a subsystem that is already-"
"in-use will either interrupt the currently-running command (if the command "
"has been scheduled as interruptible), or else be ignored."
msgstr ""
"Les sous-systèmes sont la base du système de gestion des ressources du "
"``CommandScheduler``. Les commandes peuvent déclarer les ressources dont "
"elles ont besoin en spécifiant les sous-systèmes avec lesquels elles "
"interagissent. Le planificateur ne démarrera jamais en même temps plus d'une"
" commande qui nécessite le même sous-système. Tenter de planifier une "
"commande qui nécessite un sous-système qui est déjà utilisé entraînera sont "
"l'interruption de la commande en cours d'exécution (si la commande a été "
"planifiée comme étant interruptible), ou la commande nouvellement planifiée "
"sera ignorée."

#: ../../frc-docs/source/docs/software/commandbased/subsystems.rst:11
msgid "Creating a Subsystem"
msgstr "Créer un sous-système"

#: ../../frc-docs/source/docs/software/commandbased/subsystems.rst:17
#: ../../frc-docs/source/docs/software/commandbased/subsystems.rst:44
msgid "Java"
msgstr "Java"

#: ../../frc-docs/source/docs/software/commandbased/subsystems.rst:25
msgid "C++"
msgstr "C++"

#: ../../frc-docs/source/docs/software/commandbased/subsystems.rst:33
msgid ""
"This class contains a few convenience features on top of the basic "
"``Subsystem`` interface: it automatically calls the ``register()`` method in"
" its constructor to register the subsystem with the scheduler (this is "
"necessary for the ``periodic()`` method to be called when the scheduler "
"runs), and also implements the ``Sendable`` interface so that it can be sent"
" to the dashboard to display/log relevant status information."
msgstr ""
"Cette classe contient quelques fonctionnalités pratiques en complément à "
"l'interface ``Subsystem`` de base : elle appelle automatiquement la méthode "
"``register()`` dans son constructeur pour enregistrer le sous-système auprès"
" du ``CommandScheduler`` (cela est nécessaire pour que la méthode "
"``periodic()`` soit exécutée par le ``CommandScheduler``), et elle "
"implémente aussi l'interface ``Sendable`` afin que le sous-système puisse "
"être envoyé au tableau de bord (SmartDashboard et/ou Shuffleboard) et ainsi "
"afficher les informations pertinentes sur son état."

#: ../../frc-docs/source/docs/software/commandbased/subsystems.rst:35
msgid ""
"Advanced users seeking more flexibility may simply create a class that "
"implements the ``Subsystem`` interface."
msgstr ""
"Les utilisateurs avancés qui veulent plus de flexibilité peuvent simplement "
"créer une classe qui implémente l'interface ``Subsystem``."

#: ../../frc-docs/source/docs/software/commandbased/subsystems.rst:38
msgid "Simple Subsystem Example"
msgstr "Exemple de sous-système simple"

#: ../../frc-docs/source/docs/software/commandbased/subsystems.rst:40
msgid ""
"What might a functional subsystem look like in practice? Below is a simple "
"pneumatically-actuated hatch mechanism from the HatchBot example project "
"(`Java "
"<https://github.com/wpilibsuite/allwpilib/tree/main/wpilibjExamples/src/main/java/edu/wpi/first/wpilibj/examples/hatchbottraditional>`__,"
" `C++ "
"<https://github.com/wpilibsuite/allwpilib/tree/main/wpilibcExamples/src/main/cpp/examples/HatchbotTraditional>`__):"
msgstr ""
"À quoi pourrait ressembler un sous-système fonctionnel en pratique? Vous "
"trouverez ci-dessous un mécanisme d'écoutille simple à actionnement "
"pneumatique provenant du projet d'exemple *HatchBot* (`Java "
"<https://github.com/wpilibsuite/allwpilib/tree/main/wpilibjExamples/src/main/java/edu/wpi/first/wpilibj/examples/hatchbottraditional>`__,"
" `C++ "
"<https://github.com/wpilibsuite/allwpilib/tree/main/wpilibcExamples/src/main/cpp/examples/HatchbotTraditional>`__):"

#: ../../frc-docs/source/docs/software/commandbased/subsystems.rst:52
msgid "C++ (Header)"
msgstr "C++ (Header ou en-tête)"

#: ../../frc-docs/source/docs/software/commandbased/subsystems.rst:60
msgid "C++ (Source)"
msgstr "C++ (Source)"

#: ../../frc-docs/source/docs/software/commandbased/subsystems.rst:68
msgid ""
"Notice that the subsystem hides the presence of the DoubleSolenoid from "
"outside code (it is declared ``private``), and instead publicly exposes two "
"higher-level, descriptive robot actions: ``grabHatch()`` and "
"``releaseHatch()``. It is extremely important that \"implementation "
"details\" such as the double solenoid be \"hidden\" in this manner; this "
"ensures that code outside the subsystem will never cause the solenoid to be "
"in an unexpected state. It also allows the user to change the implementation"
" (for instance, a motor could be used instead of a pneumatic) without any of"
" the code outside of the subsystem having to change with it."
msgstr ""
"Remarquez que le sous-système cache au reste du code la présence du "
"``DoubleSolenoid`` (il est déclaré ``private``), et expose plutôt "
"publiquement deux actions descriptives de plus haut niveau: ``grabHatch()`` "
"et ``releaseHatch()``. C'est extrêmement important que les \"détails "
"d'implémentation\" comme le solénoïde double soient \"cachés\" de cette "
"manière : cela garantit que le code hors du sous-système ne mettra jamais le"
" solénoïde dans un état inattendu. Cela permet également à l'utilisateur de "
"changer l'implémentation (par exemple, un moteur pourrait être utilisé au "
"lieu d'un système pneumatique) sans qu'aucun code à l'extérieur du sous-"
"système ne soit obligé d'être modifié avec lui. "

#: ../../frc-docs/source/docs/software/commandbased/subsystems.rst:71
msgid "Setting Default Commands"
msgstr "Configurer les commandes par défaut"

#: ../../frc-docs/source/docs/software/commandbased/subsystems.rst:73
msgid ""
"In the C++ command-based library, the CommandScheduler `owns` the default "
"command objects - accordingly, the object passed to the "
"``SetDefaultCommand()`` method will be either moved or copied, depending on "
"whether it is an rvalue or an lvalue (`rvalue/lvalue explanation "
"<http://thbecker.net/articles/rvalue_references/section_01.html>`__).  The "
"examples here ensure that move semantics are used by casting to an rvalue "
"with ``std::move()``."
msgstr ""
"Dans la bibliothèque orientée commande C++, le ``CommandScheduler`` "
"`possède` les objets des commandes par défaut - par conséquent, l'objet "
"passé à la méthode ``SetDefaultCommand()`` sera soit déplacé s'il s'agit "
"d'une *rvalue*, ou bien copié s'il s'agit d'une *lvalue* (`explication sur "
"les rvalues et les lvalues "
"<http://thbecker.net/articles/rvalue_references/section_01.html>`__). Les "
"exemples ci-dessous garantissent que la sémantique de déplacement est "
"utilisée par conversion en *rvalue* avec ``std::move()``."

#: ../../frc-docs/source/docs/software/commandbased/subsystems.rst:75
msgid ""
"\"Default commands\" are commands that run automatically whenever a "
"subsystem is not being used by another command."
msgstr ""
"Les « commandes par défaut » sont des commandes exécutées automatiquement "
"lorsqu'un sous-système n'est pas utilisé par une autre commande."

#: ../../frc-docs/source/docs/software/commandbased/subsystems.rst:77
msgid ""
"Setting a default command for a subsystem is very easy; one simply calls "
"``CommandScheduler.getInstance().setDefaultCommand()``, or, more simply, the"
" ``setDefaultCommand()`` method of the ``Subsystem`` interface:"
msgstr ""
"Configurer la commande par défaut d'un sous-système est très facile : il "
"faut simplement appeler la méthode "
"``CommandScheduler.getInstance().setDefaultCommand(Subsystem, Command)`` ou,"
" encore plus simple, appeler la méthode ``setDefaultCommand(Command)`` de "
"l'interface ``Subsytem`` :"

#: ../../frc-docs/source/docs/software/commandbased/subsystems.rst:99
msgid ""
"A command that is assigned as the default command for a subsystem must "
"require that subsystem."
msgstr ""
"Une commande affectée comme commande par défaut pour un sous-système doit "
"requérir ce sous-système."
