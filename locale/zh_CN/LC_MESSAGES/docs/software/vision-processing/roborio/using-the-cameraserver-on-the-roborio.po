# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, FIRST and other WPILib Contributors
# This file is distributed under the same license as the FIRST Robotics Competition package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# 楚涵 张 <zhangchuhan1210@126.com>, 2020
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: FIRST Robotics Competition 2021\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-07-18 04:03+0000\n"
"PO-Revision-Date: 2020-06-12 20:56+0000\n"
"Last-Translator: 楚涵 张 <zhangchuhan1210@126.com>, 2020\n"
"Language-Team: Chinese (China) (https://www.transifex.com/wpilib/teams/109324/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../frc-docs/source/docs/software/vision-processing/roborio/using-the-cameraserver-on-the-roborio.rst:2
msgid "Using the CameraServer on the roboRIO"
msgstr "使用roboRIO上的CameraServer "

#: ../../frc-docs/source/docs/software/vision-processing/roborio/using-the-cameraserver-on-the-roborio.rst:5
msgid "Simple CameraServer Program"
msgstr "简易CameraServer程序"

#: ../../frc-docs/source/docs/software/vision-processing/roborio/using-the-cameraserver-on-the-roborio.rst:7
msgid ""
"The following program starts automatic capture of a USB camera like the "
"Microsoft LifeCam that is connected to the roboRIO. In this mode, the camera"
" will capture frames and send them to the dashboard. To view the images, "
"create a CameraServer Stream Viewer widget using the \"View\", then \"Add\" "
"menu in the dashboard. The images are unprocessed and just forwarded from "
"the camera to the dashboard."
msgstr ""
"下面的程序会启动USB相机的自动捕获，就像连接到roboRIO的Microsoft "
"LifeCam。在这种模式下，相机将捕捉帧并将它们发送到仪表盘。要查看图片，使用“view”创建一个CameraServer tream "
"Viewer工具窗，然后在仪表板上创建“Add”菜单。图像未经过处理，只是从相机转发到仪表板。"

#: ../../frc-docs/source/docs/software/vision-processing/roborio/using-the-cameraserver-on-the-roborio.rst:43
msgid "Advanced Camera Server Program"
msgstr "高级相机服务器程序"

#: ../../frc-docs/source/docs/software/vision-processing/roborio/using-the-cameraserver-on-the-roborio.rst:45
msgid ""
"In the following example a thread created in robotInit() gets the Camera "
"Server instance. Each frame of the video is individually processed, in this "
"case converting a color image (BGR) to gray scale using the OpenCV "
"cvtColor() method. The resultant images are then passed to the output stream"
" and sent to the dashboard. You can replace the cvtColor operation with any "
"image processing code that is necessary for your application. You can even "
"annotate the image using OpenCV methods to write targeting information onto "
"the image being sent to the dashboard."
msgstr ""
"在以下示例中，在robotInit（）中创建的线程获取Camera Server实例。视频的每一帧都经过单独处理，在这种情况下，使用OpenCV "
"cvtColor（）方法将彩色图像（BGR）转换为灰度。然后将生成的图像传递到输出流，并发送到仪表板。你可以使用应用程序所需的任何图像处理代码替换cvtColor操作。甚至可以使用OpenCV方法对图像进行注释，以将定向信息写入要发送到仪表板的图像上。"

#: ../../frc-docs/source/docs/software/vision-processing/roborio/using-the-cameraserver-on-the-roborio.rst:118
msgid ""
"Notice that in these examples, the ``PutVideo()`` method writes the video to"
" a named stream. To view that stream on Shuffleboard, select that named "
"stream. In this case that is \"Blur\" for the Java program and \"Gray\" for "
"the C++ sample."
msgstr ""
"请注意，在这些示例中，“ "
"PutVideo（）”方法将视频写入命名流。要在Shuffleboard上查看，请选择该命名。在这种情况下，对于Java程序来说是“ Blur”，对于C"
" ++示例来说是“ Gray”。"
