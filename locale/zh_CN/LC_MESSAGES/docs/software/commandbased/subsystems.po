# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, FIRST and other WPILib Contributors. This work is licensed under a Creative Commons Attribution 4.0 International License
# This file is distributed under the same license as the FIRST Robotics Competition package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Jiangshan Gong <jiangshan_gong@163.com>, 2020
# Yitong Zhao <lucius300er@outlook.com>, 2021
# Team 5308 <team5308@163.com>, 2021
# Michael Zhao <haitong1110@126.com>, 2022
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: FIRST Robotics Competition 2022\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-12-26 16:04+0000\n"
"PO-Revision-Date: 2020-04-25 02:02+0000\n"
"Last-Translator: Michael Zhao <haitong1110@126.com>, 2022\n"
"Language-Team: Chinese (China) (https://www.transifex.com/wpilib/teams/109324/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../frc-docs/source/docs/software/commandbased/subsystems.rst:2
msgid "Subsystems"
msgstr "子系统"

#: ../../frc-docs/source/docs/software/commandbased/subsystems.rst:11
msgid "Creating a Subsystem"
msgstr "创建子系统"

#: ../../frc-docs/source/docs/software/commandbased/subsystems.rst:33
msgid ""
"This class contains a few convenience features on top of the basic "
"``Subsystem`` interface: it automatically calls the ``register()`` method in"
" its constructor to register the subsystem with the scheduler (this is "
"necessary for the ``periodic()`` method to be called when the scheduler "
"runs), and also implements the ``Sendable`` interface so that it can be sent"
" to the dashboard to display/log relevant status information."
msgstr ""
"此类在基本的“Subsystem”接口之上包含一些便利功能：它会在其构造函数中自动调用\"register()”方法以向调度程序注册子系统（这对于在调度程序运行时调用“periodic()”方法是必须的），并实现“Sendable”接口，以便将其发送到仪表板以显示/记录相关状态信息。"

#: ../../frc-docs/source/docs/software/commandbased/subsystems.rst:35
msgid ""
"Advanced users seeking more flexibility may simply create a class that "
"implements the ``Subsystem`` interface."
msgstr "寻求更高灵活性的高级用户可以简单地创建一个实现“Subsystem”接口的类。"

#: ../../frc-docs/source/docs/software/commandbased/subsystems.rst:38
msgid "Simple Subsystem Example"
msgstr "简单子系统示例"

#: ../../frc-docs/source/docs/software/commandbased/subsystems.rst:68
msgid ""
"Notice that the subsystem hides the presence of the DoubleSolenoid from "
"outside code (it is declared ``private``), and instead publicly exposes two "
"higher-level, descriptive robot actions: ``grabHatch()`` and "
"``releaseHatch()``. It is extremely important that \"implementation "
"details\" such as the double solenoid be \"hidden\" in this manner; this "
"ensures that code outside the subsystem will never cause the solenoid to be "
"in an unexpected state. It also allows the user to change the implementation"
" (for instance, a motor could be used instead of a pneumatic) without any of"
" the code outside of the subsystem having to change with it."
msgstr ""
"请注意，子系统从外部代码隐藏了DoubleSolenoid的存在（被声明为``private''），而是公开公开了两个更高级别的描述性机器人动作：``grabHatch（）''和``releaseHatch（）''"
" "
"``。以这种方式“隐藏”双螺线管之类的“实现细节”是极为重要的；这样可以确保子系统外部的代码永远不会导致螺线管处于意外状态。它还允许用户更改实现方式（例如，可以使用电动机代替气动方式），而子系统外部的任何代码都不必随之更改。"

#: ../../frc-docs/source/docs/software/commandbased/subsystems.rst:142
msgid ""
"Setting a default command for a subsystem is very easy; one simply calls "
"``CommandScheduler.getInstance().setDefaultCommand()``, or, more simply, the"
" ``setDefaultCommand()`` method of the ``Subsystem`` interface:"
msgstr ""
"为子系统设置默认命令非常容易：简单地调用“CommandScheduler.getInstance().setDefaultCommand()”，或调用“Subsystem”接口的“setDefaultCommand()”方法："
