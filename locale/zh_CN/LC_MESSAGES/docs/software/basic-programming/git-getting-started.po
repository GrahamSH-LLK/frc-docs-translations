# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, FIRST and other WPILib Contributors
# This file is distributed under the same license as the FIRST Robotics Competition package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Ran Xin <xinryanryan@gmail.com>, 2020
# Emma Yuan <emmayyw@gmail.com>, 2020
# Tianrui Wu <tw2789@columbia.edu>, 2021
# Team 5308 <team5308@163.com>, 2021
# Ran Xin <xinryanryan@outlook.com>, 2021
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: FIRST Robotics Competition 2021\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-07-28 16:03+0000\n"
"PO-Revision-Date: 2020-04-25 02:01+0000\n"
"Last-Translator: Ran Xin <xinryanryan@outlook.com>, 2021\n"
"Language-Team: Chinese (China) (https://www.transifex.com/wpilib/teams/109324/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:4
msgid "Git Version Control Introduction"
msgstr "Git 版本控制介绍"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:6
msgid ""
"A more in-depth guide on Git is available on the `Git website <https://git-"
"scm.com/book/en/v2>`__."
msgstr "有关 Git 的更深入的指南可以在 `Git 网站 <https://git-scm.com/book/en/v2>`__ 上找到。"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:8
msgid ""
"`Git <https://git-scm.com/about>`_ is a Distributed Version Control System "
"(VCS) created by Linus Torvalds, also known for creating and maintaining the"
" Linux kernel. Version Control is a system for tracking changes of code for "
"developers. The advantages of Git Version Control are:"
msgstr ""
"`git <https://git-scm.com/about>`_ 是 Linus Torvalds 创建的分布式版本控制系统 "
"(VCS)，也因创建和维护 Linux 内核而闻名。版本控制是一个为开发人员跟踪代码更改的系统。 Git 版本控制的优点是："

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:10
msgid "Separate testing environments into *branches*"
msgstr "将测试环境分离进 *分支*"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:11
msgid "Ability to navigate to a particular *commit* without removing history"
msgstr "能够导航到特定的 *提交* 而不删除历史记录"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:12
msgid "Ability to manage *commits* in various ways, including combining them"
msgstr "能够以多种方式管理 *提交*，包括将它们组合在一起"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:13
msgid "Various other features, see `here <https://git-scm.com/about>`__"
msgstr "各种其他功能，请参见 `这里 <https://git-scm.com/about>`__"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:16
msgid "Prerequisites"
msgstr "先决条件"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:18
msgid "This tutorial uses the Windows operating system"
msgstr "本教程使用 Windows 操作系统"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:20
msgid "You have to download and install Git from the following links:"
msgstr "你必须从以下链接下载并安装 Git ："

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:22
msgid "`Windows <https://git-scm.com/download/win>`_"
msgstr "`Windows <https://git-scm.com/download/win>`_"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:23
msgid "`macOS <https://git-scm.com/download/mac>`_"
msgstr "`macOS <https://git-scm.com/download/mac>`_"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:24
msgid "`Linux <https://git-scm.com/download/linux>`_"
msgstr "`Linux <https://git-scm.com/download/linux>`_"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:26
msgid ""
"You may need to add Git to your `path "
"<https://www.google.com/search?q=adding+git+to+path>`__"
msgstr ""
"你可能需要将 Git 添加到 `路径 <https://www.google.com/search?q=adding+git+to+path>` __"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:29
msgid "Git Vocabulary"
msgstr "Git 词汇"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:31
msgid "Git revolves around several core commands:"
msgstr "Git 围绕着几个核心命令："

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:33
msgid ""
"**Repository:** the data structure of your code, including a ``.git`` folder"
" in the root directory"
msgstr "**Repository**  代码的数据结构，包括根目录中的 .git 文件夹"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:34
msgid ""
"**Commit:** a particular saved state of the repository, this includes all "
"files and additions"
msgstr "**Commit:** 存储库的特定保存状态，其中包括所有文件和添加项"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:35
msgid ""
"**Branch:** a means of separating various commits, having a unique history. "
"This is primarily used for separating development and stable branches."
msgstr "**Branch:** 一种分离各种提交的方法，具有独特的历史记录。这主要用于分离开发和稳定分支。"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:36
msgid "**Push:** update the remote repository with your local changes"
msgstr "**Push:** 使用本地更改更新远程存储库"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:37
msgid "**Pull:** update your local repository with the remote changes"
msgstr "**Pull:** 使用远程更改更新本地存储库"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:38
msgid "**Clone:** retrieving a local copy of a repository to modify"
msgstr "**Clone:** 检索存储库的本地副本以进行修改"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:39
msgid ""
"**Fork:** duplicating a pre-existing repository to modify, and to compare "
"against the original"
msgstr "**Fork:** 复制先前存在的存储库以进行修改，并与原始存储库进行比较"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:40
msgid ""
"**Merge:** combining various changes from different branches/commits/forks "
"into a single history"
msgstr "**Merge:** 将来自不同分支/提交/分支的各种更改合并到一个历史中"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:43
msgid "Repository"
msgstr "资料库"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:45
msgid ""
"A Git repository is a data structure containing the structure, history, and "
"files of a project."
msgstr "Git 存储库是一种数据结构，其中包含项目的结构，历史记录和文件。"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:47
msgid "Git repositories usually consist of:"
msgstr "Git 存储库通常包括："

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:49
msgid ""
"A ``.git`` folder. This folder contains the various information about the "
"repository."
msgstr "一个 .git 文件夹。此文件夹包含有关存储库的各种信息。"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:50
msgid ""
"A ``.gitignore`` file. This file contains the files or directories that you "
"do *not* want included when you commit."
msgstr "一个 .gitignore 文件。该文件包含您你在提交时不希望包含的文件或目录。"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:51
msgid "Files and folders. This is the main content of the repository."
msgstr "文件和文件夹。这是存储库的主要内容。"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:54
msgid "Creating the repository"
msgstr "创建存储库"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:56
msgid ""
"You can store the repository locally, or through a remote. A remote being "
"the cloud, or possibly another storage medium that hosts your repository. "
"`GitHub <https://github.com/>`_ is a popular free hosting service. Numerous "
"developers use it, and that's what this tutorial will use."
msgstr ""
"你可以在本地或通过远程存储存储库。远程服务器是云服务，或者是托管您的存储库的另一种存储介质。 GitHub <https://github.com/> "
"_ 是一种流行的免费托管服务。许多开发人员都使用它，而本教程将使用它。"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:58
msgid ""
"There are various providers that can host repositories. `Gitlab "
"<https://about.gitlab.com>`_ and `Bitbucket <https://bitbucket.org/>`_ are a"
" few alternatives to Github."
msgstr ""
"有许多提供托管存储库服务的提供者。 \"Gitlab <https://about.gitlab.com>\"_和 \"Bitbucket "
"<https://bitbucket.org/>\"_是Github 的一些替代方案。"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:61
msgid "Creating a GitHub Account"
msgstr "创建一个 GitHub 帐户"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:63
msgid ""
"Go ahead and create a GitHub account by visiting the `website "
"<https://github.com>`_ and following the own screen prompts."
msgstr "继续并通过访问 `<https://github.com>`_ 网站并按照自己的屏幕提示来创建 GitHub 帐户。"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rstNone
msgid "How to create a new GitHub account."
msgstr "如何创建一个新的GitHub帐户。"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:69
msgid "Local Creation"
msgstr "本地创作"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:71
msgid ""
"After creating and verifying your account, you'll want to visit the "
"homepage. It'll look similar to the shown image."
msgstr "创建并验证您的帐户后，你会要访问主页。它看起来类似于展示的图像。"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rstNone
msgid "Showing the newly created account homepage."
msgstr "显示新创建的帐户主页。"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:76
msgid "Click the plus icon in the top right."
msgstr "单击右上角的加号图标。"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rstNone
msgid "Location of the plus button."
msgstr "加号按钮的位置。"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:81
msgid "Then click *\"New Repository\"*"
msgstr "然后点击*“New Repository” *"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rstNone
msgid "Creating a new menu after clicking the plus button."
msgstr "点击加号按钮后创建一个新菜单。"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:86
msgid ""
"Fill out the appropriate information, and then click *\"Create repository\"*"
msgstr "填写适当的信息，然后单击 *“Create repository” *"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rstNone
msgid "Showing the \"create repository\" button"
msgstr "显示“创建存储库”按钮"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:91
msgid "You should see a screen similar to this"
msgstr "你应该会在屏幕上看到与此类似的内容"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rstNone
msgid "The quick setup screen after creating a repository."
msgstr "创建存储库后的快速设置屏幕。"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:96
msgid ""
"The keyboard shortcut :kbd:`Ctrl+~` can be used to open a terminal in Visual"
" Studio Code."
msgstr "使用键盘快捷键 :kbd:`Ctrl+~` 可打开一个 Visual Studio Code 终端。"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:98
msgid ""
"Now you'll want to open a PowerShell window and navigate to your project "
"directory. An excellent tutorial on PowerShell can be found `here "
"<https://programminghistorian.org/en/lessons/intro-to-powershell>`__. Please"
" consult your search engine on how to open a terminal on alternative "
"operating systems."
msgstr ""
"现在，你将要打开一个 PowerShell "
"窗口并导航到您的项目目录。可以在此处找到<https://programminghistorian.org/en/lessons/intro-to-"
"powershell> __ 上有关 PowerShell 的优秀教程。请使用你的搜索引擎，以了解如何在其他操作系统上打开终端。"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rstNone
msgid "An empty powershell window."
msgstr "一个空的powershell窗口。"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:103
msgid ""
"If a directory is empty, a file needs to be created in order for git to have"
" something to track. In the below Empty Directory example, we created a file"
" called ``README.md`` with the contents of ``# Example Repo``. For FRC\\ "
"|reg| Robot projects, the below Existing Project commands should be run in "
"the root of a project :ref:`created by the VS Code WPILib Project Creator "
"<docs/zero-to-robot/step-4/creating-benchtop-test-program-cpp-java:Creating "
"a New WPILib Project>`. More details on the various commands can be found in"
" the subsequent sections."
msgstr ""
"若目录为空，则需要创建一个文档，使得 git 有文件来追踪。在下文中的空目录样例中，我们创建了一个 ``README.md`` 文档，其内容为 ``# "
"Example Repo`` 。对于 FRC\\ |reg| 机器人项目，以下 \"现有项目\" 的指令需要在项目的根目录  :ref:`created"
" by the VS Code WPILib Project Creator <docs/zero-to-robot/step-4/creating-"
"benchtop-test-program-cpp-java:Creating a New WPILib Project>` "
"运行。在以下各节中可以找到更多各种指令的详细信息。"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:105
msgid ""
"Replace the filepath ``\"C:\\Users\\ExampleUser9007\\Documents\\Example "
"Folder\"`` with the one you want to create the repo in, and replace the "
"remote URL ``https://github.com/ExampleUser9007/ExampleRepo.git`` with the "
"URL for the repo you created in the previous steps."
msgstr ""
"将文件路径 \"C：\\ Users \\ ExampleUser9007 \\ Documents \\ Example Folder\" "
"替换为你要在其中创建存储库的路径，然后替换远程 URL                                "
"'https://github.com/ExampleUser9007/ExampleRepo.git'. 以及你在先前步骤中创建的仓库的 URL。"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:109
msgid "Empty Directory"
msgstr "空目录"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:125
msgid "Existing Project"
msgstr "现有的项目"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:141
msgid "Commits"
msgstr "提交"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:143
msgid ""
"Repositories are primarily composed of commits. Commits are saved states or "
"*versions* of code."
msgstr "存储库主要由提交组成。提交是保存状态或代码的 \"版本\"。"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:145
msgid ""
"In the previous example, we created a file called README.md. Open that file "
"in your favorite text editor and edit a few lines. After tinkering with the "
"file for a bit, simply save and close. Navigate to PowerShell and type the "
"following commands."
msgstr ""
"在前面的示例中，我们创建了一个名为 README.md 的文件。在你喜欢的文本编辑器中打开该文件，然后编辑几行。修补文件后，只需保存并关闭即可。导航到 "
"PowerShell，然后键入以下命令。"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:155
msgid ""
"Writing good commit messages is a key part of a maintainable project. A "
"guide on writing commit messages can be found `here "
"<https://chris.beams.io/posts/git-commit/>`_."
msgstr ""
"编写良好的提交消息是可维护项目的关键部分。可以在此处找到有关编写提交消息的指南：\" <https://chris.beams.io/posts"
"/git-commit/>\" _。"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:158
msgid "Git Pull"
msgstr "Git Pull"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:160
msgid ""
"``git fetch`` can be used when the user does not wish to automatically merge"
" into the current working branch"
msgstr "当用户不希望自动合并到当前工作分支时，可以使用 ``git fetch`` 。"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:162
msgid ""
"This command retrieves the history or commits from the remote repository. "
"When the remote contains work you do not have, it will attempt to "
"automatically merge. See :ref:`docs/software/basic-programming/git-getting-"
"started:Merging`."
msgstr ""
"此命令从远程存储库检索历史记录或提交。当遥控器包含你没有的工作时，它将尝试自动合并。请参阅：docs/software/basic-"
"programming/git-getting-started:Merging。"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:164
msgid "Run: ``git pull``"
msgstr "运行: ``git pull``"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:167
msgid "Git Add"
msgstr "Git Add"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:169
msgid ""
"This command adds a selected file(s) to a commit. To commit every "
"file/folder that isn't excluded via *gitignore*."
msgstr "该命令将选定的文件添加到提交中。提交未通过 * gitignore * 排除的每个文件/文件夹。"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:171
msgid ""
"Run: ``git add FILENAME.txt`` where FILENAME.txt is the name and extension "
"of the file to add to a commit. Run: ``git add .`` will add every untracked,"
" unexcluded file when ran in the root of the repository."
msgstr ""
"运行： git add FILENAME.txt，其中 FILENAME.txt 是要添加到提交的文件的名称和扩展名。运行：``git add .`` "
"在存储库的根目录中运行时将添加每个未跟踪和未排除的文件。"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:175
msgid "Git Commit"
msgstr "Git Commit"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:177
msgid ""
"This command creates the commit and stores it locally. This saves the state "
"and adds it to the repositories history."
msgstr "该命令创建提交并将其存储在本地。这将保存状态并将其添加到存储库历史记录中。"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:179
msgid "Run: ``git commit -m \"type message here\"``"
msgstr "运行：``git commit -m \"在此处输入消息\"``"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:182
msgid "Git Push"
msgstr "Git Push"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:184
msgid "Upload (Push) your local changes to the remote (Cloud)"
msgstr "将本地更改上传 (推送) 到远程 (云)"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:186
msgid "Run: ``git push``"
msgstr "运行: ``git push``"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:189
msgid "Branches"
msgstr "分支"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:191
msgid ""
"Branches are a similar to parallel worlds to Git. They start off the same, "
"and then they can \"branch\" out into different varying paths. Consider the "
"Git control flow to look similar to this."
msgstr "分支类似于 Git 的平行世界。它们以相同的方式开始，然后可以 \"分支\" 到不同的变化路径中。 Git 控制流看起来与此类似。"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rstNone
msgid "A branch workflow state diagram."
msgstr "分支工作流状态图。"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:196
msgid ""
"In the above example, main was branched (or duplicated) into the branch "
"Feature 1 and someone checked out the branch, creating a local copy. Then, "
"someone committed (or uploaded) their changes, merging them into the branch "
"Feature 1. You are \"merging\" the changes from one branch into another."
msgstr ""
"在上面的示例中，main 被分支 (或复制) 到分支 Feature 1 中，并且有人查看了分支，从而创建了本地副本。然后，某人提交 (或上传) "
"了他们的更改，将其合并到分支功能 1 中。你正在将更改从一个分支 \"合并\" 到另一个分支。"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:199
msgid "Creating a Branch"
msgstr "创建一个分支"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:201
msgid ""
"Run: ``git branch branch-name`` where branch-name is the name of the branch "
"to create. The new branch history will be created from the current active "
"branch."
msgstr ""
"运行: ``git branch branch-name``，其中 branch-name 是要创建的分支的名称。新的分支历史将从当前的活动分支中创建。"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:204
msgid "Entering a Branch"
msgstr "输入一个分支"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:206
msgid "Once a branch is created, you have to then enter the branch."
msgstr "创建分支后，你必须进入分支。"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:208
msgid ""
"Run: ``git checkout branch-name`` where branch-name is the branch that was "
"previously created."
msgstr "运行: ``git checkout branch-name`` 其中 branch-name 是先前创建的分支。"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:211
msgid "Merging"
msgstr "合并"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:213
msgid ""
"In scenarios where you want to copy one branches history into another, you "
"can merge them. A merge is done by calling ``git merge branch-name`` with "
"branch-name being the name of the branch to merge from. It is automatically "
"merged in the current active branch."
msgstr ""
"在你要将一个分支历史复制到另一个分支的情况下，也可以合并它们。合并是通过调用 ``git merge branch-name`` 来完成的"
"，branch-name 是要从中合并的分支的名称。它会自动合并到当前活动分支中。"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:215
msgid ""
"It's common for a remote repository to contain work (history) that you do "
"not have. Whenever you run ``git pull``, it will attempt to automatically "
"merge those commits. That merge may look like the below."
msgstr ""
"远程存储库通常包含你没有的工作 (历史记录)。每当你运行 ``git pull`` 时，它将尝试自动合并那些提交的内容。该合并可能如下所示。"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rstNone
msgid "A merge workflow state diagram."
msgstr "合并工作流状态图。"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:220
msgid ""
"However, in the above example, what if File 1 was modified by both branch "
"FeatureA and FeatureB? This is called a **merge conflict**. A merge conflict"
" will can be resolved by editing the conflicting file. In the example, we "
"would need to edit File 1 to keep the history or changes that we want. After"
" that has been done. Simply re-add, re-commit, and then push your changes."
msgstr ""
"但是，在上面的示例中，如果文件 1 被分支 FeatureA 和 FeatureB 修改了怎么办？这称为 **合并冲突** "
"。合并冲突的问题可以通过编辑冲突文件来解决。在该示例中，我们需要编辑文件1以保留历史记录或所需的更改。完成之后。只需重新添加，重新提交，然后推送你的更改。"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:223
msgid "Resets"
msgstr "重置"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:225
msgid ""
"Sometimes history needs to be reset, or a commit needs to be undone. This "
"can be done multiple ways."
msgstr "有时历史记录需要被重置，或者提交需要被撤消。这可以通过多种方式完成。"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:228
msgid "Reverting the Commit"
msgstr "还原提交"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:230
msgid ""
"You cannot revert a merge, as git does not know which branch or origin it "
"should choose."
msgstr "你无法还原合并，因为 git 不知道应选择哪个分支或源。"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:232
msgid ""
"To revert history leading up to a commit run ``git revert commit-id``. The "
"commit IDs can be shown using the ``git log`` command."
msgstr "要还原导致提交的历史记录，运行 ``git revert commit-id``。可以使用 ``git log`` 命令显示提交ID。"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:235
msgid "Resetting the Head"
msgstr "重设 Head 指针"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:237
msgid ""
"Forcibly resetting the head is a dangerous command. It permanently erases "
"all history past the target. You have been warned!"
msgstr "强制磁头复位是一个危险的指令。此指令将永久删除目标之外的所有历史记录。请三思后行！"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:239
msgid "Run: ``git reset --hard commit-id``."
msgstr "运行: ``git reset --hard commit-id``。"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:242
msgid "Forks"
msgstr "Forks"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:244
msgid ""
"Forks can be treated similarly to branches. You can merge the upstream "
"(original repository) into the origin (forked repository)."
msgstr "可以像处理分支一样处理 Fork。你可以将上游库 (原始存储库) 合并到本地库 (克隆存储库) 中。"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:247
msgid "Cloning an Existing Repo"
msgstr "克隆已存在的 \"Repo\""

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:249
msgid ""
"In the situation that a repository is already created and stored on a "
"remote, you can clone it using"
msgstr "在已经创建存储库并将其存储在远程服务器上的情况下，可以使用以下命令克隆该存储库: "

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:255
msgid ""
"where ``myrepo.git`` is replaced with your git repo. If you follow this, you"
" can skip to :ref:commits <docs/software/basic-programming/git-getting-"
"started:Commits>`."
msgstr ""
"其中，\"myrepo.git'\" 被替换为您的 \"git repo\"。如果您遵循此步骤，则可以跳到：ref：commits "
"<docs/software/basic-programming/git-getting-started:Commits>`。"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:258
msgid "Updating a Fork"
msgstr "更新 Fork"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:260
msgid ""
"Add the upstream: ``git remote add upstream "
"https://github.com/ORIGINAL_OWNER/ORIGINAL_REPOSITORY.git``"
msgstr ""
"添加上游: ``git remote add upstream "
"https://github.com/ORIGINAL_OWNER/ORIGINAL_REPOSITORY.git``"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:261
msgid "Confirm it was added via: ``git remote -v``"
msgstr "确认通过以下方式添加了它：``git remote -v``"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:262
msgid "Pull changes from upstream: ``git fetch upstream``"
msgstr "从上游进行 Pull 更改: ``git fetch upstream``"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:263
msgid ""
"Merge the changes into head: ``git merge upstream/upstream-branch-name``"
msgstr "将更改整合进 head: ``git merge upstream/upstream-branch-name``"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:266
msgid "Gitignore"
msgstr "Gitignore"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:268
msgid ""
"It is extremely important that teams **do not** modify the ``.gitignore`` "
"file that is included with their robot project. This can lead to offline "
"deployment not working."
msgstr "队伍 **请勿** 修改其机器人项目中随附的 ``.gitignore`` 文件，这一点非常重要。这可能导致下线部署无法正常工作。"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:270
msgid ""
"A ``.gitignore`` file is commonly used as a list of files to not "
"automatically commit with ``git add``. Any files or directory listed in this"
" file will **not** be committed. They will also not show up with `git status"
" <https://git-scm.com/docs/git-status>`_."
msgstr ""
"一个 ``.gitignore`` 文件通常用作不使用 ``git add`` 自动提交的文件列表。此文件中列出的任何文件或目录都将 "
"**不提交**。它们也不会显示为 `git status <https://git-scm.com/docs/git-status>`_."

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:272
msgid ""
"Additional Information can be found `here "
"<https://www.atlassian.com/git/tutorials/saving-changes/gitignore>`__"
msgstr ""
"可以在此处找到附加信息 <https://www.atlassian.com/git/tutorials/saving-"
"changes/gitignore>`__"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:275
msgid "Hiding a Folder"
msgstr "隐藏一个文件夹"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:277
msgid ""
"Simply add a new line containing the folder to hide, with a forward slash at"
" the end"
msgstr "只需添加包含要隐藏的文件夹的新行，并在末尾加正斜杠"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:279
msgid "EX: ``directory-to-exclude/``"
msgstr "例如: ``directory-to-exclude/``"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:282
msgid "Hiding a File"
msgstr "隐藏一个文件"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:284
msgid ""
"Add a new line with the name of the file to hide, including any prepending "
"directory relative to the root of the repository."
msgstr "用要隐藏的文件名添加新行，包括相对于存储库根目录的任何前缀目录。"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:286
msgid "EX: ``directory/file-to-hide.txt``"
msgstr "例如:`` directory / file-to-hide.txt ``"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:288
msgid "EX: ``file-to-hide2.txt``"
msgstr "例如:`` file-to-hide2.txt ``"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:291
msgid "Additional Information"
msgstr "附加的信息"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:293
msgid ""
"A much more in-depth tutorial can be found at the official `git <https"
"://git-scm.com/docs/gittutorial>`__ website."
msgstr "在 git `<https://git-scm.com/docs/gittutorial>` 官方网站上可以找到更深入的教程。"

#: ../../frc-docs/source/docs/software/basic-programming/git-getting-started.rst:295
msgid ""
"A guide for correcting common mistakes can be found at the git `flight rules"
" <https://github.com/k88hudson/git-flight-rules/blob/master/README.md>`_ "
"repository."
msgstr ""
"可以在 git`flight 规则 <https://github.com/k88hudson/git-flight-"
"rules/blob/master/README.md>`_ 存储库中找到纠正常见错误的指南。"
